/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> ans;
        if(root==nullptr){
            return ans;
        }
        inordertraversal(root, ans);
        return ans;
    }
    void inordertraversal(TreeNode* root, vector<int> &arr){
        stack<TreeNode*> stackStore;
        TreeNode* node=root;
        while(true){
            if(node!=nullptr){
                stackStore.push(node);
                node=node->left;
            }
            else{
                if(stackStore.empty()) break;
                arr.push_back(stackStore.top()->val);
                node=stackStore.top()->right;
                stackStore.pop();
            }
        }
    }
};
