/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> ans;
        if(root==nullptr){
            return ans;
        }
        preorder(root, ans);
        return ans;
    }
    void preorder(TreeNode* root, vector<int> &arr){
        stack<TreeNode*> nodeStore;
        nodeStore.push(root);
        while(!nodeStore.empty()){
            TreeNode* newNode=nodeStore.top();
            nodeStore.pop();
            arr.push_back(newNode->val);
            if(newNode->right!=nullptr){
                nodeStore.push(newNode->right);
            }
            if(newNode->left!=nullptr){
                nodeStore.push(newNode->left);
            }
        }
    }
};
